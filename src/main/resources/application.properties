
# ===============================
# = Company Details
# ===============================
company.name = IPAYAFRICA
company.id = 00001
dummy.id = 00300
changekey.id =00700
api.ver = 2.44
payment.value =cash
payment.key = 2
currency.code=KES
timezone.local = Africa/Nairobi
time.format = yyyy-MM-dd HH:mm:ss Z

ref.counter=refcount
seq.counter=seqcount
rev.counter=revcount

# ===============================
# = TOKEN SERVER CONNECTION
# ===============================
token.server.ip = 41.204.194.188
token.server.port = 8902
token.server.timeout = 30000
# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mariadb://localhost:3306/elipapower
# Username and password
spring.datasource.username = root
spring.datasource.password = mysql
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
#org.quartz.dataSource.myDS.maxConnections = 5

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
#hibernate.dialect.storage_engine=innodb

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = com.ipayafrica.elipapower.util.ImprovedNamingStrategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl

#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.MariaDB53Dialect

# ===============================
# = errorlog 
# ===============================

errorLog.filepath=log

#============================================================================
# Configure Main Scheduler Properties
#============================================================================
 
org.quartz.scheduler.instanceId = AUTO
org.quartz.scheduler.makeSchedulerThreadDaemon = true
 
#============================================================================
# Configure ThreadPool
#============================================================================
 
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.makeThreadsDaemons = true
org.quartz.threadPool.threadCount: 20
org.quartz.threadPool.threadPriority: 5
 
#============================================================================
# Configure JobStore
#============================================================================

org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX 
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.tablePrefix = QRTZ_
org.quartz.jobStore.isClustered = false
org.quartz.jobStore.dataSource = myDs
org.quartz.jobStore.misfireThreshold = 25000



